name: Build nchat

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  NCHAT_VERSION: 3.67

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: d99kris/nchat
          ref: v${{ env.NCHAT_VERSION }}
          path: nchat
      - name: Setup Go Environment
        uses: actions/setup-go@v4
        with:
          go-version: stable
          cache: false
      - name: Install Dependencies
        run: sudo apt-get install ccache cmake build-essential gperf help2man libreadline-dev libssl-dev libncurses-dev libncursesw5-dev ncurses-doc zlib1g-dev libsqlite3-dev libmagic-dev -y
      - name: Build
        run: |
          cd nchat
          mkdir -p build && cd build && cmake .. && make -s
          mkdir -p bin
          make DESTDIR="./bin" install
      - name: Pack tar.gz
        run: |
          mkdir artifacts
          cd nchat/build/bin/
          tar -zcvf ../../../artifacts/nchat-v${{ env.NCHAT_VERSION }}-x86_64-binary.tar.gz .
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tar_gz
          path: artifacts/nchat-v${{ env.NCHAT_VERSION }}-x86_64-binary.tar.gz
  pack_deb:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download tar.gz
        uses: actions/download-artifact@v4
        with:
          path: |
            artifacts/
      - name: Prepare
        run: |
          mkdir -p build
          cd build
          tar -zxvf ../artifacts/tar_gz/nchat-v${{ env.NCHAT_VERSION }}-x86_64-binary.tar.gz
      - name: Pack deb
        id: pack_deb
        uses: jiro4989/build-deb-action@v3
        with:
          package: nchat
          package_root: build/
          maintainer: d99kris
          version: ${{ env.NCHAT_VERSION }}
          arch: amd64
          depends: 'ncurses, file, sqlite3, openssl, glibc, zlib, libxcb1, lib64gcc-s1, libpng16-16'
          desc: 'nchat is a terminal-based chat client for Linux and macOS with support for Telegram and WhatsApp.'
      - name: Prepare Artifact
        run: |
          mkdir -p dist
          mv ${{ steps.pack_deb.outputs.file_name }} dist/
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deb
          path: dist/*
  pack_zst:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: workspace
      - name: Download tar.gz
        uses: actions/download-artifact@v4
        with:
          path: |
            artifacts/
      - name: Prepare
        run: |
          cp -r workspace/assets/archlinux/ build/
          cp artifacts/tar_gz/nchat-v${{ env.NCHAT_VERSION }}-x86_64-binary.tar.gz build/nchat-bin/
          wget https://github.com/d99kris/nchat/raw/master/LICENSE -o build/nchat-bin/LICENSE
      - name: Pack zst for ArchLinux
        id: pack_zst
        uses: edlanglois/pkgbuild-action@v1
        with:
          pkgdir: build/nchat-bin
      - name: Prepare Artifact
        run: |
          mkdir -p dist
          mv ${{ steps.pack_zst.outputs.pkgfile0 }} dist/
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: zst
          path: dist/*
  release:
    runs-on: ubuntu-latest
    needs: [pack_deb, pack_zst]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: |
            dist/
      - name: Prepare Artifacts
        run: |
          cd dist
          mv -f tar_gz/* .
          mv -f deb/* .
          mv -f zst/* .
          rm -rf tar_gz deb zst
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nchat-v${{ env.NCHAT_VERSION }}
          name: nchat Binary (v${{ env.NCHAT_VERSION }})
          body: This release contains the x86_64 binary of [nchat](https://github.com/d99kris/nchat).
          files: dist/*
          fail_on_unmatched_files: true
