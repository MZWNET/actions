name: Build nitro

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
        type: string

permissions:
  contents: write

jobs:
  build_intel_mkl_avx2_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install Deps
        run: |
          wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt-get update
          sudo apt-get install ccache intel-basekit intel-oneapi-mkl intel-oneapi-mkl-devel ninja-build zip -y
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: janhq/nitro
          submodules: recursive
          ref: v${{ inputs.version }}
      - name: Install Deps (nitro)
        run: ./install_deps.sh
      - name: Build
        run: |
          mkdir build
          cd build
          source /opt/intel/oneapi/setvars.sh
          cmake .. -G "Ninja" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icpx -DLLAMA_BUILD_SERVER=ON -DLLAMA_NATIVE=OFF -DLLAMA_BLAS=ON -DLLAMA_BLAS_VENDOR=Intel10_64_dyn -DLLAMA_AVX2=ON -DWHISPER_SYCL=ON -DWHISPER_SYCL_F16=ON -DWHISPER_AVX2=ON -DNITRO_VERSION=${{ inputs.version }}
          cmake --build . --config Release -j $(nproc)
      - name: Pack
        run: |
          mkdir -p build/dist
          zip build/dist/nitro-${{ inputs.version }}-linux-amd64-intel-mkl-avx2.zip build/nitro
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: intel-mkl-avx2-linux
          path: build/dist/nitro-${{ inputs.version }}-linux-amd64-intel-mkl-avx2.zip
  build_cu121_avx512_win:
    runs-on: windows-latest
    steps:
      - name: Setup VS Dev Environment
        uses: seanmiddleditch/gha-setup-vsdevenv@v4
      - name: Install CUDA 12.1
        id: install-cuda
        uses: Jimver/cuda-toolkit@v0.2.13
        with:
          cuda: "12.1.1"
          method: network
          sub-packages: '["nvcc", "cudart", "cublas", "cublas_dev", "thrust", "visual_studio_integration"]'
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          windows_compile_environment: msvc
      - name: Install Ninja
        uses: urkle/action-get-ninja@v1
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: janhq/nitro
          submodules: recursive
          ref: v${{ inputs.version }}
      - name: Install Deps (nitro)
        run: |
          cmake -S ./nitro_deps -B ./build_deps/nitro_deps
          cmake --build ./build_deps/nitro_deps --config Release
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -G "Ninja" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DLLAMA_BUILD_SERVER=ON -DLLAMA_NATIVE=OFF -DLLAMA_CUBLAS=ON -DLLAMA_AVX512=ON -DWHISPER_SDL2=ON -DWHISPER_CUBLAS=ON -DWHISPER_AVX512=ON -DNITRO_VERSION=${{ inputs.version }}
          cmake --build . --config Release -j $env:NUMBER_OF_PROCESSORS
      - name: Pack
        run: |
          cd build\
          cp ..\build_deps\_install\bin\zlib.dll .
          7z a dist\nitro-${{ inputs.version }}-win-amd64-cuda-12-1-avx512.zip nitro.exe zlib.dll
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cu121-avx512-win
          path: build/dist/nitro-${{ inputs.version }}-win-amd64-cuda-12-1-avx512.zip
  release:
    runs-on: ubuntu-latest
    needs: [build_intel_mkl_avx2_linux, build_cu121_avx512_win]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: |
            dist/
      - name: Prepare Release
        run: |
          cd dist
          mv -f intel-mkl-avx2-linux/* .
          mv -f cu121-avx512-win/* .
          rm -rf intel-mkl-avx2-linux cu121-avx512-win
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nitro-v${{ inputs.version }}
          name: Binary build for nitro (v${{ inputs.version }})
          body: |
            This release contains the x86_64 binary of [nitro](https://github.com/janhq/nitro).
          files: dist/*
          fail_on_unmatched_files: true
