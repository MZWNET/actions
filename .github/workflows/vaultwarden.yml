name: Extract vaultwarden Binary & Pack

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  VAULTWARDEN_VERSION: 1.30.1

jobs:
  extract:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        run: |
          wget https://raw.githubusercontent.com/jjlin/docker-image-extract/main/docker-image-extract
          chmod +x docker-image-extract
          mkdir x86_64 armv6 armv7 arm64
          mkdir -p dist/x86_64 dist/armv6 dist/armv7 dist/arm64
      - name: Pull & Extract
        run: |
          cd x86_64
          ../docker-image-extract vaultwarden/server:${{ env.VAULTWARDEN_VERSION }}
          cd ../armv6
          ../docker-image-extract -p linux/arm/v6 vaultwarden/server:${{ env.VAULTWARDEN_VERSION }}
          cd ../armv7
          ../docker-image-extract -p linux/arm/v7 vaultwarden/server:${{ env.VAULTWARDEN_VERSION }}
          cd ../arm64
          ../docker-image-extract -p linux/arm64 vaultwarden/server:${{ env.VAULTWARDEN_VERSION }}
      - name: Clean
        run: |
          cp x86_64/output/vaultwarden dist/x86_64
          cp armv6/output/vaultwarden dist/armv6
          cp armv7/output/vaultwarden dist/armv7
          cp arm64/output/vaultwarden dist/arm64
          cp -r x86_64/output/web-vault dist/x86_64
          cp -r armv6/output/web-vault dist/armv6
          cp -r armv7/output/web-vault dist/armv7
          cp -r arm64/output/web-vault dist/arm64
      - name: Pack
        run: |
          cd dist/x86_64/
          tar -zcvf ../../vaultwarden-x86_64-binary.tar.gz .
          cd ../armv6/
          tar -zcvf ../../vaultwarden-armv6-binary.tar.gz .
          cd ../armv7/
          tar -zcvf ../../vaultwarden-armv7-binary.tar.gz .
          cd ../arm64/
          tar -zcvf ../../vaultwarden-arm64-binary.tar.gz .
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tar_gz
          path: |
            vaultwarden-x86_64-binary.tar.gz
            vaultwarden-armv6-binary.tar.gz
            vaultwarden-armv7-binary.tar.gz
            vaultwarden-arm64-binary.tar.gz
  pack_deb_amd64:
    runs-on: ubuntu-latest
    needs: extract
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: resources
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: |
            artifacts/
      - name: Prepare
        run: |
          mkdir cache
          cd cache
          tar -zxvf ../artifacts/vaultwarden-x86_64-binary.tar.gz
          mkdir -p usr/bin
          mv vaultwarden usr/bin/
          mkdir -p var/lib/vaultwarden/
          mv web-vault var/lib/vaultwarden/
          mkdir -p etc/vaultwarden/
          touch etc/vaultwarden/vaultwarden.env
          mkdir -p etc/systemd/system/
          cp ../resources/assets/deb-resources/vaultwarden.service etc/systemd/system/
      - name: Pack deb
        id: pack_deb
        uses: jiro4989/build-deb-action@v3
        with:
          package: vaultwarden
          package_root: cache/
          maintainer: dani-garcia
          version: ${{ env.VAULTWARDEN_VERSION }}
          arch: amd64
          depends: "glibc"
          desc: "Unofficial Bitwarden compatible server written in Rust, formerly known as bitwarden_rs"
  pack_deb_arm64:
    runs-on: ubuntu-latest
    needs: extract
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: |
            artifacts/
      - name: Prepare
        run: |
          mkdir cache
          cd cache
          tar -zxvf ../artifacts/vaultwarden-x86_64-binary.tar.gz
          mkdir -p usr/bin
          mv vaultwarden usr/bin/
          mkdir -p var/lib/vaultwarden/
          mv web-vault var/lib/vaultwarden/
          mkdir -p etc/vaultwarden/
          touch etc/vaultwarden/vaultwarden.env
          mkdir -p etc/systemd/system/
  release:
    runs-on: ubuntu-latest
    needs: [extract, pack_deb_amd64, pack_deb_arm64]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: |
            artifacts/
      - name: Prepare
        run: |
          cd artifacts/
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: vaultwarden-bin
          name: vaultwarden Binary
          body: This release contains the officially supported binary of [vaultwarden](https://github.com/dani-garcia/vaultwarden) (v${{ env.VAULTWARDEN_VERSION }}), extracted from official docker image.
          files: |
            vaultwarden-x86_64-binary.tar.gz
            vaultwarden-armv6-binary.tar.gz
            vaultwarden-armv7-binary.tar.gz
            vaultwarden-arm64-binary.tar.gz
          fail_on_unmatched_files: true
