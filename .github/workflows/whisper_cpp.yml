name: Build whisper.cpp

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
        type: string

permissions:
  contents: write

jobs:
  build_sycl_avx2_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install Deps
        run: |
          wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt-get update
          sudo apt-get install ccache intel-basekit intel-oneapi-mkl intel-oneapi-mkl-devel ninja-build zip -y
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ggerganov/whisper.cpp
          submodules: recursive
          ref: v${{ inputs.version }}
      - name: Build
        run: |
          mkdir -p build
          cd build || exit
          source /opt/intel/oneapi/setvars.sh
          cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_SHARED_LIBS=ON -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icpx -DGGML_SYCL=ON -DGGML_AVX2=ON
          cmake --build . --config Release -j $(nproc)
      - name: Pack
        run: |
          mkdir -p build/dist
          find . -name "*.so" -exec mv {} build/bin/ \;
          mv build/src/libwhisper.so.${{ inputs.version }} build/bin/libwhisper.so
          cd build/bin/ || exit
          zip ../dist/whisper-v${{ inputs.version }}-bin-linux-avx2-sycl-x64.zip ./*
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sycl-avx2-linux
          path: build/dist/*
  build_cu130_avx512_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install CUDA
        id: install-cuda
        uses: MZWNET/cuda-toolkit@master
        with:
          cuda: "13.0.1"
          method: network
      - name: Install Deps
        run: sudo apt-get install ccache ninja-build zip -y
      - name: Checkout
        uses: actions/checkout@v5
        with:
          repository: ggerganov/whisper.cpp
          submodules: recursive
          ref: v${{ inputs.version }}
      - name: Build
        run: |
          mkdir -p build
          cd build || exit
          cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_SHARED_LIBS=ON -DGGML_CUDA=ON -DGGML_AVX512=ON -DGGML_CUDA_FA_ALL_QUANTS=ON -DCMAKE_CUDA_ARCHITECTURES=86
          cmake --build . --config Release -j "$(nproc)"
      - name: Pack
        run: |
          mkdir -p build/dist
          find . -name "*.so" -exec mv {} build/bin/ \;
          mv build/src/libwhisper.so.${{ inputs.version }} build/bin/libwhisper.so
          cd build/bin/ || exit
          zip ../dist/whisper-v${{ inputs.version }}-bin-linux-avx512-cuda-cu13.0.1-x64.zip ./*
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cu130-avx512-linux
          path: build/dist/*
  release:
    runs-on: ubuntu-latest
    needs: [build_sycl_avx2_linux, build_cu130_avx512_linux]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v6
        with:
          path: |
            dist/
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: whisper_cpp-v${{ inputs.version }}
          name: Binary build for whisper.cpp (v${{ inputs.version }})
          body: |
            This release contains the x86_64 binary of [whisper.cpp](https://github.com/ggerganov/whisper.cpp).
          files: dist/**/*
          fail_on_unmatched_files: true
