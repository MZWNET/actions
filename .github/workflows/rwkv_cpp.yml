name: Build rwkv.cpp with cuBLAS

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  get_short_commit_hash:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.short_commit_hash.outputs.short }}
    steps:
      - name: Prepare commit hash
        id: commit_hash
        run: |
          git clone https://github.com/saharNooby/rwkv.cpp.git cache --depth 1
          cd cache
          echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          cd ..
          rm -rf cache
      - name: Get short commit hash
        id: short_commit_hash
        uses: prompt/actions-commit-hash@v3
        with:
          commit: ${{ steps.commit_hash.outputs.hash }}
  build_cu113:
    needs: get_short_commit_hash
    runs-on: windows-latest
    steps:
      - name: Install CUDA 11.3
        id: install-cuda
        uses: Jimver/cuda-toolkit@v0.2.11
        with:
          cuda: "11.3.1"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: saharNooby/rwkv.cpp
          submodules: recursive
      - name: Inject CUDA Compute Capability 3.5
        run: |
          $content = Get-Content -Path "CMakeLists.txt" -Raw
          $newContent = $content -replace 'set\(CMAKE_CUDA_ARCHITECTURES "52;61;70"\)', 'set(CMAKE_CUDA_ARCHITECTURES "35;52;61;70")'
          $newContent | Set-Content -Path "CMakeLists.txt"
      - name: Inject code to support CUDA 11.3 in VS2022
        run: |
          # Get visual studio install dir
          $vcdir = $(vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath)
          $msvc = $(join-path $vcdir $('VC\Tools\MSVC\'+$(gc -raw $(join-path $vcdir 'VC\Auxiliary\Build\Microsoft.VCToolsVersion.default.txt')).Trim()))

          # Remove CUDA 11.3 compiler version check
          $content = Get-Content -Path "${{steps.install-cuda.outputs.CUDA_PATH}}\include\crt\host_config.h" -Raw
          $newContent = $content -replace '#if _MSC_VER < 1910 \|\| _MSC_VER >= 1930', ''
          $newContent = $newContent -replace "#error -- unsupported Microsoft Visual Studio version! Only the versions between 2017 and 2019 \(inclusive\) are supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.", ''
          $newContent = $newContent -replace '#elif _MSC_VER >= 1910 && _MSC_VER < 1910', '#if _MSC_VER >= 1910 && _MSC_VER < 1910'
          $newContent | Set-Content -Path "${{steps.install-cuda.outputs.CUDA_PATH}}\include\crt\host_config.h"

          # Remove VS2022 CUDA version check
          $content = Get-Content -Path ($msvc + "\include\yvals_core.h") -Raw
          $newContent = $content -replace '#if __CUDACC_VER_MAJOR__ < 11 \|\| \(__CUDACC_VER_MAJOR__ == 11 \&\& __CUDACC_VER_MINOR__ < 6\)', '#if __CUDACC_VER_MAJOR__ < 11'
          $newContent | Set-Content -Path ($msvc + "\include\yvals_core.h")
          # Debug
          mv ($msvc + "\include\yvals_core.h") .\

          # Add CUDA 11.3 Visual Studio Integration to VS2022
          cp "${{steps.install-cuda.outputs.CUDA_PATH}}\extras\visual_studio_integration\MSBuildExtensions\*" ($vcdir + "\MSBuild\Microsoft\VC\v170\BuildCustomizations\")
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: yvals_core
          path: yvals_core.h
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DRWKV_CUBLAS=ON -DRWKV_AVX2=ON
          cmake --build . --config Release
      - name: Pack
        run: |
          cd build\bin\Release\
          7z a .\build\dist\rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx2-cublas-cu113-x64.7z .
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cu121
          path: build/dist/rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx2-cublas-cu113-x64.7z
  build_cu121:
    needs: get_short_commit_hash
    runs-on: windows-latest
    steps:
      - name: Install CUDA 12.1
        id: install-cuda
        uses: Jimver/cuda-toolkit@v0.2.11
        with:
          cuda: "12.1.0"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: saharNooby/rwkv.cpp
          submodules: recursive
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -DRWKV_CUBLAS=ON -DRWKV_AVX512=ON
          cmake --build . --config Release
      - name: Pack
        run: |
          cd build\bin\Release\
          7z a ..\..\dist\rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx512-cublas-cu121-x64.7z .
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cu121
          path: build/dist/rwkv-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx512-cublas-cu121-x64.7z
  release:
    runs-on: ubuntu-latest
    needs: [get_short_commit_hash, build_cu113, build_cu121]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: |
            dist/
      - name: Prepare Release
        run: |
          cd dist
          mv -f cu113/* .
          mv -f cu121/* .
          rm -rf cu113 cu121
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: rwkv_cpp-${{ needs.get_short_commit_hash.outputs.hash }}
          name: Binary build for rwkv.cpp (${{ needs.get_short_commit_hash.outputs.hash }})
          body: |
            This release contains the x86_64 binary (Windows version) of [rwkv.cpp](https://github.com/saherNooby/rwkv.cpp).

            Please note that I only build for AVX2 & cuBLAS & CUDA v11.3 **or** AVX512 & cuBLAS & CUDA v12.1, using VS2022 BuildTools.
          files: dist/*
          fail_on_unmatched_files: true