name: Build stable-diffusion.cpp

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  get_short_commit_hash:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.short_commit_hash.outputs.short }}
    steps:
      - name: Prepare commit hash
        id: commit_hash
        run: |
          git clone https://github.com/leejet/stable-diffusion.cpp cache --depth 1
          cd cache
          echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          cd ..
          rm -rf cache
      - name: Get short commit hash
        id: short_commit_hash
        uses: prompt/actions-commit-hash@v3
        with:
          commit: ${{ steps.commit_hash.outputs.hash }}
  build_openblas_avx2_linux:
    needs: get_short_commit_hash
    runs-on: ubuntu-latest
    steps:
      - name: Install Deps
        run: |
          sudo apt-get update
          sudo apt-get install ccache ninja-build libopenblas-dev zip -y
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: leejet/stable-diffusion.cpp
          submodules: recursive
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DGGML_OPENBLAS=ON -DGGML_AVX2=ON -DSD_FLASH_ATTN=ON -DSD_BUILD_SHARED_LIBS=ON
          cmake --build . --config Release
      - name: Pack
        run: |
          mkdir -p build/dist
          cd build/bin/
          zip ../dist/sd-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-linux-avx2-openblas-x64.zip ./*
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: openblas-avx2-linux
          path: build/dist/sd-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-linux-avx2-openblas-x64.zip
  build_cu121_avx2_linux:
    needs: get_short_commit_hash
    runs-on: ubuntu-latest
    steps:
      - name: Install CUDA 12.1
        id: install-cuda
        uses: Jimver/cuda-toolkit@v0.2.13
        with:
          cuda: "12.1.1"
      - name: Install Deps
        run: sudo apt-get install ccache zip ninja-build -y
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: leejet/stable-diffusion.cpp
          submodules: recursive
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DSD_CUBLAS=ON -DGGML_AVX2=ON -DSD_BUILD_SHARED_LIBS=ON
          cmake --build . --config Release
      - name: Pack
        run: |
          mkdir -p build/dist
          cd build/bin/
          zip ../dist/sd-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-linux-avx2-cublas-cu121-x64.zip ./*
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cu121-avx2-linux
          path: build/dist/sd-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-linux-avx2-cublas-cu121-x64.zip
  build_cu121_avx512_win:
    needs: get_short_commit_hash
    runs-on: windows-latest
    steps:
      - name: Install CUDA 12.1
        id: install-cuda
        uses: Jimver/cuda-toolkit@v0.2.13
        with:
          cuda: "12.1.1"
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          windows_compile_environment: msvc
      - name: Install Ninja
        uses: urkle/action-get-ninja@v1
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: leejet/stable-diffusion.cpp
          submodules: recursive
      - name: Fix cl.exe not in PATH
        run: |
          $vcdir = $(vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath)
          $msvc = $(join-path $vcdir $('VC\Tools\MSVC\'+$(gc -raw $(join-path $vcdir 'VC\Auxiliary\Build\Microsoft.VCToolsVersion.default.txt')).Trim()))
          $clDir =  $(join-path $msvc 'bin\Hostx64\x64')
          $path = [Environment]::GetEnvironmentVariable('Path', 'Machine')
          $newpath = $Env:clDir + ';' + $path
          [Environment]::SetEnvironmentVariable('Path', $newpath, 'Machine')
      - name: Build
        run: |
          mkdir build
          cd build
          cmake .. -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DSD_CUBLAS=ON -DGGML_AVX512=ON
          cmake --build . --config Release
      - name: Pack
        run: |
          cd build\bin\
          7z a ..\dist\sd-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx512-cublas-cu121-x64.zip .
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cu121-avx512-win
          path: build/dist/sd-master-${{ needs.get_short_commit_hash.outputs.hash }}-bin-win-avx512-cublas-cu121-x64.zip
  release:
    runs-on: ubuntu-latest
    needs: [get_short_commit_hash, build_openblas_avx2_linux, build_cu121_avx2_linux, build_cu121_avx512_win]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: |
            dist/
      - name: Prepare Release
        run: |
          cd dist
          mv -f openblas-avx2-linux/* .
          mv -f cu121-avx2-linux/* .
          mv -f cu121-avx512-win/* .
          rm -rf openblas-avx2-linux cu121-avx2-linux cu121-avx512-win
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: sd-master-${{ needs.get_short_commit_hash.outputs.hash }}
          name: Binary build for stable-diffusion.cpp (${{ needs.get_short_commit_hash.outputs.hash }})
          body: |
            This release contains the x86_64 binary of [stable-diffusion.cpp](https://github.com/leejet/stable-diffusion.cpp).
          files: dist/*
          fail_on_unmatched_files: true
